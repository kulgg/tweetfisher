import { useQuery } from "@tanstack/react-query";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import React, { useState } from "react";
import LoadingAnimation from "../components/loading";

const Home: NextPage = () => {
  const [usernameInput, setUsernameInput] = useState("");

  const { isLoading, error, data, refetch, isFetching } = useQuery({
    queryKey: ["webarchive"],
    queryFn: async () => {
      const response = await fetch(`/api/archive/${usernameInput}`);
      return response.json();
    },
    enabled: false,
  });

  console.log(usernameInput);
  console.log("isloading", isLoading);
  console.log("data", data);

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    console.log("submitted");
    refetch();
    setUsernameInput("");
  };

  const archivedTweetUrls = data;

  return (
    <>
      <Head>
        <title>DeletedTweets</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-screen overflow-hidden ">
        <div className="container mx-auto flex flex-col items-center">
          <h1 className="mr-auto mt-2 bg-gradient-to-r from-emerald-200 to-rose-200 bg-clip-text text-[39px] font-bold text-transparent sm:mt-20 sm:text-7xl">
            Find Deleted Tweets
          </h1>
          <div className="mt-10 w-full sm:mt-20">
            <label
              htmlFor="search"
              className="block text-lg font-medium text-indigo-200"
            >
              Enter a username
            </label>
            <form
              onSubmit={handleSubmit}
              className="relative mt-1 flex items-center"
            >
              <input
                type="text"
                name="search"
                autoComplete="off"
                id="search"
                placeholder="elonmusk"
                className="block h-12 w-full rounded-md border-gray-500 bg-neutral-900 text-lg text-gray-100 shadow-sm placeholder:text-gray-500 focus:border-[1px] focus:border-gray-300 focus:ring-1 focus:ring-emerald-700"
                value={usernameInput}
                onChange={(e) => setUsernameInput(e.currentTarget.value)}
              />
            </form>
          </div>
          {data && (
            <div className="mr-auto mt-4 text-lg">
              Discovered{" "}
              <span className="text-emerald-200">{data.statusUrls.length}</span>{" "}
              archived tweets.
            </div>
          )}
        </div>
        <div className="flex flex-row justify-center">
          {isFetching && (
            <div className="mt-6">
              <LoadingAnimation />
            </div>
          )}
        </div>
      </main>
    </>
  );
};

export default Home;
