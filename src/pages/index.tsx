import { useQuery } from "@tanstack/react-query";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import React, { useEffect, useState } from "react";
import LoadingAnimation from "../components/loading";
import Tweet from "../components/tweet";

const Home: NextPage = () => {
  const [usernameInput, setUsernameInput] = useState("");
  const [currentUsername, setCurrentUsername] = useState("");

  const { isLoading, error, data, refetch, isFetching } = useQuery({
    queryKey: ["webarchive"],
    queryFn: async () => {
      const response = await fetch(`/api/archive/${usernameInput}`);
      const result = await response.json();
      return result;
    },
    enabled: false,
  });

  console.log(usernameInput);
  console.log("isloading", isLoading);
  console.log("data", data);

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    console.log("submitted");
    setCurrentUsername(usernameInput);
    refetch();
    setUsernameInput("");
  };

  useEffect(() => {
    if (!data) {
      return;
    }

    // refetch other query
  }, [data]);

  return (
    <>
      <Head>
        <title>DeletedTweets</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-screen overflow-hidden ">
        <div className="container mx-auto flex flex-col items-center">
          <h1 className="mr-auto mt-2 bg-gradient-to-r from-emerald-200 to-rose-200 bg-clip-text text-[39px] font-bold text-transparent sm:mt-20 sm:text-7xl">
            Find Deleted Tweets
          </h1>
          <div className="mt-10 w-full sm:mt-20">
            <form onSubmit={handleSubmit} className="relative">
              <label
                htmlFor="search"
                className="block text-lg font-medium text-indigo-200"
              >
                Enter a username
              </label>
              <input
                type="text"
                name="search"
                autoComplete="off"
                id="search"
                placeholder="elonmusk"
                className="mt-1 block h-12 w-full rounded-md border-gray-500 bg-neutral-900 text-lg text-gray-100 shadow-sm placeholder:text-gray-500 focus:border-[1px] focus:border-gray-300 focus:ring-1 focus:ring-emerald-700"
                value={usernameInput}
                onChange={(e) => setUsernameInput(e.currentTarget.value)}
              />
            </form>
          </div>
          <div className="mt-6"></div>
          {currentUsername && (
            <div className="mb-3 mr-auto rounded-lg bg-gray-800 py-1 px-2 text-lg text-zinc-300">
              @{currentUsername}
            </div>
          )}
          {isFetching && (
            <div className="mr-auto flex flex-row items-center gap-2">
              <div className="flex items-center gap-1 text-xl text-gray-200">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  strokeWidth={1.5}
                  stroke="currentColor"
                  className="h-6 w-6 text-emerald-200"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    d="M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m5.231 13.481L15 17.25m-4.5-15H5.625c-.621 0-1.125.504-1.125 1.125v16.5c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9zm3.75 11.625a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z"
                  />
                </svg>
                <div>Searching for archived tweets</div>
              </div>
              <LoadingAnimation />
            </div>
          )}
          {!isFetching && data && (
            <div className="mr-auto text-xl">
              Discovered{" "}
              <span className="text-emerald-200">{data.statusUrls.length}</span>{" "}
              archived tweets.
            </div>
          )}
          <Tweet
            pfp={
              "https://pbs.twimg.com/profile_images/1590968738358079488/IY9Gx6Ok_400x400.jpg"
            }
            text={
              "Next Twitter update will remember whether you were on For You (ie recommended), Following or list you made & stop switching you back to recommended tweets"
            }
            url={"https://twitter.com/disclosetv/status/1617540634482708481"}
            username="Elon Musk"
            handle={"elonmusk"}
            created={new Date()}
          />
        </div>
      </main>
    </>
  );
};

export default Home;
